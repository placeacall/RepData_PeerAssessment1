cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- matrix(1:6, 2, 3)
for(i in seq_len(nrow(x))) {
for(j in seq_len(ncol(x))) {
print(x[i, j])
}
}
x
for(i in x) print(i)
inverse()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
a <- makeCacheMatrix()
a$set(matrix(c(1, 0, 5, 2, 1, 6, 3, 4, 0),3,3) )
a$get()
cacheSolve(a)
install.packages("knitr")
library(knitr)
```{r simulation, echo=FALSE, results='hide'}
setwd("~/GitHub/RepData_PeerAssessment1")
dir()
dir()
activity <- read.csv("activity.csv", header=TRUE, na.strings="NA")
View(activity)
View(activity)
activity <- read.csv("activity.csv", header=TRUE, na.strings=NA)
View(activity)
str(Activity)
str(activity)
summary(activity)
activity <- read.csv("activity.csv", header=TRUE, na.strings="NA")
summary(activity)
library(ggplot2)
p <- ggplot(data=activity)
summary(p)
p <- ggplot(data=activity, aes(steps))
p + geom_histogram()
p + geom_histogram(binwidth=5)
p + geom_histogram(binwidth=0.5)
p + geom_histogram(binwidth=1)
p + geom_histogram(binwidth=0.3)
p + geom_histogram(binwidth=1.5)
p + geom_histogram()
p + geom_histogram(binwidth=15)
p + geom_histogram(binwidth=25)
table(activity$steps)
p + geom_histogram(binwidth=40)
df <- aggregate(interval ~ steps, data=activity, sum)
View(df)
head (df)
ggplot(df, aes(steps, interval)) + geom_line()
df <- aggregate(interval ~ steps, data=activity, average)
df <- aggregate(interval ~ steps, data=activity, mean(na.rm=TRUE))
df <- aggregate(interval ~ steps, data=activity, mean)
ggplot(df, aes(steps, interval)) + geom_line()
which.max(df$interval)
df[which.max(df$interval), ]
head(Df)
head(df)
View(df)
df[which.max(df$interval), ]$steps
head(interval)
head(activity)
head(activity[steps != NA ])
head(activity[steps != NA,  ])
head(activity[activity$steps != NA,  ])
head(activity[!is.na(activity$steps),  ])
df <- aggregate(interval ~ steps, data=activity[!is.na(activity$steps),  ], mean)
ggplot(df, aes(steps, interval)) + geom_line()
maxSteps <- df[which.max(df$interval), ]$steps
maxSteps
head(df)
'The number of missing values'
nrow(activity)
head(activity)
is.na(activity$steps)
head(activity$steps[!is.na(activity$steps), ])
head(activity[!is.na(activity$steps), ])
head(activity[is.na(activity$steps), ])
nrow(activity[is.na(activity$steps), ])
summary(activity)
missingCount <- nrow(activity[is.na(activity$steps), ])
print(paste('The number of missing step values is ', missingCount)
)
runif(n=10, min=2, max=10)
head(activity[is.na(activity$steps), ], n=20)
head(activity[activity$date == '2012-10-01', ], n=20)
View(activity)
head(activity[is.na(activity$steps), ], n=20)
head(activity[is.na(activity$steps), ])
head(activity[is.na(activity$steps), ]$date)
table(activity[is.na(activity$steps), ]$date)
288*8
summary(activity)
head(activity[is.na(activity$steps), ])
activity.na <- activity[is.na(activity$steps), ]
View(activity.na)
table(activity.na$date)
activity.na$date <- factor(activity.na$date)
table(activity.na$date)
unique(activity.na$date)
levels(activity.na$date)
for(i in levels(activity.na$date))
{print i}
for(i in levels(activity.na$date))
{print(i)}
head(activity[activity$interval == 0, ])
mean(activity[activity$interval == 0, ])
mean(activity[activity$interval == 0, ], na.rm=TRUE)
mean(activity[activity$interval == 0, ]$steps, na.rm=TRUE)
median(activity[activity$interval == 0, ]$steps, na.rm=TRUE)
summary(activity)
for(i in activity[1:3,])
{print(i)}
for(i in activity[1:3,])
{print(i$date)}
{print(i[1,])}
{print(i$date)}
for(i in activity[1:3,])
{print(activity[i,])}
activity[1, ]
for(i in 1:nrow(activity))
{
print(i)
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(activity[i,)
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(activity[i,])
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(activity[i,1])
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(activity[i,1], activity[i,2])
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(c(activity[i,1], activity[i,2])
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(c(activity[i,1], activity[i,2]))
if(i > 4) stop()
}
for(i in 1:nrow(activity))
{
print(c(activity[i,1], activity[i,2], activity[i,3]))
if(i > 4) stop()
}
1:20
replace( 1:20, 10:15, 1:2)
replace(c(a=1, b=2, c=3, d=4), "b", 10)
c(a=1, b=2, c=3, d=4)
for(i in 1:5)
{
print(activity[i,])
}
print(activity[i,3])
for(i in 1:5)
{
print(activity[i,3])
}
b <- c(3, 1, 9, NA, 5, NA, 6)
mean(b, na.rm=TRUE)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
impute.mean(x)
impute.mean(b)
impute.mean <- function(x) {
a <- mean(x, na.rm = TRUE)
return (ifelse (is.na(x) == TRUE , a, x))
}
impute.mean(b)
summary(activity)
newActivity <-  activity
summary(newActivityty)
summary(newActivity)
replace(newActivity$steps, is.na(newActivity$steps), mean(newActivity$steps, na.rm=TRUE))
summary(newActivityy)
summary(newActivity)
replace( 1:20, 10:15, 1:2)
newActivity$steps <- replace(newActivity$steps, is.na(newActivity$steps), mean(newActivity$steps, na.rm=TRUE))
summary(newActivity)
View(newActivity)
View(activity)
mean(activity, na.rm=TRUE)
mean(activity$steps, na.rm=TRUE)
newActivity <- activity
weekdays('2014-01-01')
head(activity$date)
weekdays(head(activity$date))
date('2012-10-01')
head(weekdays(as.Date(newActivity$date), abbreviate=FALSE))
head(weekdays(as.Date(newActivity$date), abbreviate=TRUE))
head(weekdays(newActivity$date), abbreviate=TRUE)
head(weekdays(as.Date(newActivity$date), abbreviate=TRUE))
head(weekdays(as.Date(newActivity$date), abbreviate=FALSE))
newActivity$weekday <- weekdays(as.Date(newActivity$date), abbreviate=FALSE)
View(newActivity)
df = aggregate(steps ~ date + weekday, data=newActivity, FUN=mean)
View(df)
df = aggregate(steps ~ interval + weekday, data=newActivity, FUN=mean)
View(df)
df = aggregate(steps ~ interval + weekday, data=newActivity, FUN=mean(na.rm=TRUE))
df = aggregate(steps ~ interval + weekday, data=newActivity, FUN=mean, na.rm=TRUE
))
df = aggregate(steps ~ interval + weekday, data=newActivity, FUN=mean, na.rm=TRUE)
View(df)
head(sort(df))
head(df[df[interval == 0], ])
head(df[interval == 0])
summary(df)
head(df[df[df$interval == 0], ])
head(df[df$interval == 0] )
df[df$interval == 0]
df[df$interval == 0, ]
x <- data.frame(k1 = c(NA,NA,3,4,5), k2 = c(1,NA,NA,4,5), data = 1:5)
y <- data.frame(k1 = c(NA,2,NA,4,5), k2 = c(NA,NA,3,4,5), data = 1:5)
x
y
merge(x, y, by = c("k1","k2"))
merge(x, y, by = "k1")
print(i)
for(i in newActivity)
{
print(i)
}
View(newActivity)
df[df$interval == 0 & df$weekday == "Monday", ]
df[df$interval == 0 & df$weekday == "Monday", ]$steps
for(i in newActivity[1:10,])
{
if(is.na(newActivity$steps))
{
print(as.Date(i$date))
}
}
for(i in newActivity[1:10,])
{
if(is.na(i$steps))
{
print(as.Date(i$date))
}
}
newActivity[1:10,]
for(i in newActivity[1:10,])
{
if(is.na(i$steps))
{
print(as.Date(i$date))
}
}
for(i in newActivity[1:10,])
{
print(i)
}
for(i in newActivity[1:10,])
{
print(i[1])
}
for(i in 1:5)
{
print(newActivity[i, ])
}
for(i in 1:5)
{
print(newActivity[i, ]$date)
}
for(i in 1:5)
{
print(newActivity[i, ]$steps)
}
for(i in 1:5)
{
print(c(newActivity[i, ]$steps))
}
for(i in 1:5)
{
print(c(newActivity[i, ][, 2:3]))
}
for(i in 1:5)
{
print(c(newActivity[i, 1], newActivity[i, 2]))
}
newActivity[1, 2]
newActivity$date <- as.Date(newActivity$date)
for(i in 1:5)
{
print(c(newActivity[i, 1], newActivity[i, 2]))
}
newActivity[1, 2]
typeof(newActivity[1, 2])
as.Date(""2012-10-01"")
as.Date("2012-10-01")
as.Date.character("2012-10-01")
c(1, as.Date.character("2012-10-01"))
for(i in 1:5)
{
print(newActivity[i, 2])
}
df[df$interval == 0 & df$weekday == "Monday", ]
df[df$interval == 0 & df$weekday == "Monday", ]$steps
for(i in 1:5)
{
if(is.na(newActivity[i, 1]))
{
Interval <- newActivity[i, 3]
Weekday <- newActivity[i, 4]
Step <- df[df$interval == 0 & df$weekday == "Monday", ]$steps
newActivity[i, 1] <- Step
}
}
View(newActivity)
newActivity <- activity
newActivity$weekday <- weekdays(as.Date(newActivity$date))
View(newActivity)
for(i in 1:4)
{
if(is.na(newActivity[i, 1]))
{
Interval <- newActivity[i, 3]
Weekday <- newActivity[i, 4]
Step <- df[df$interval == Interval & df$weekday == Weekday, ]$steps
newActivity[i, 1] <- Step
}
}
View(newActivity)
df[df$interval == 5 & df$weekday == "Monday", ]
newActivity <- activity
newActivity$weekday <- weekdays(as.Date(newActivity$date))
View(newActivity)
for(i in 1:nrow(newActivity))
{
if(is.na(newActivity[i, 1]))
{
Interval <- newActivity[i, 3]
Weekday <- newActivity[i, 4]
Step <- df[df$interval == Interval & df$weekday == Weekday, ]$steps
newActivity[i, 1] <- Step
}
}
View(newActivity)
View(newActivity)
View(newActivity)
View(newActivity)
View(newActivity)
View(newActivity)
